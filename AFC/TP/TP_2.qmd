---
title: "TP 2 :  Analyse Factorielle des Correspondances (AFC)"
author: "Zaineb Smida"
lang: fr
format:
  pdf:
    embed-resources: true
    self-contained-math: true
    self-contained: true
    code-fold: true
    code-summary: "Show the code"
    number-sections: true
    standalone: true
params:
  solution: true
execute: 
  cache: false
header-includes:
  - \usepackage{graphicx}
  - \usepackage{fancyhdr}
  - |
    % Ajuster la hauteur de l'en-tête
    \addtolength{\headheight}{2.5cm}

    % Appliquer le style fancy pour toutes les pages
    \pagestyle{fancy}

    % Configurer le texte et logo dans l'en-tête
    \fancyhead[L]{\textbf{5GEA - Analyse des données multidimensionnelles}}  % Texte à gauche
    \fancyhead[R]{\includegraphics[height=0.8cm]{logo_INSA.pdf}}  % Logo à droite

    % Ajouter une ligne horizontale sous l'en-tête
    \renewcommand{\headrulewidth}{0.4pt}  % Ligne horizontale sous l'en-tête

    % Appliquer le même en-tête pour la première page
    \fancypagestyle{plain}{
      \fancyhead[L]{\textbf{5GEA - Analyse des données multidimensionnelles}}  % Texte à gauche
      \fancyhead[R]{\includegraphics[height=0.8cm]{logo_INSA.pdf}}  % Logo à droite
      \renewcommand{\headrulewidth}{0.4pt}  % Ligne horizontale sous l'en-tête
    }

    % Ajouter la ligne horizontale et l'email dans le pied de page avec le numéro de page
    \fancyfoot[L]{\href{mailto:zaineb.smida@insa-lyon.fr}{zaineb.smida@insa-lyon.fr}}  % Adresse e-mail à gauche
    \fancyfoot[C]{}  % Désactiver le numéro de page centré
    \fancyfoot[R]{\thepage}  % Numéro de page à droite
    \renewcommand{\footrulewidth}{0.4pt}  % Ligne horizontale dans le pied de page
---

Vous disposez d'une base de données intitulée `assurance.txt`, qui provient d'une compagnie d'assurance et concerne 1776 jeunes conducteurs. Les variables d'intérêt sont les suivantes :  

- `FORMULE` : formule du contrat d'assurance (A = `"minimum"`, B = `"moyenne"`, C = `"maximum"`)

- `VALEUR` : valeur marchande du véhicule assuré, codée en 4 classes : (1 = `"faible valeur"`, 2 = `"valeur moyenne"`, 3 = `"valeur élevée"`, 4 = `"valeur très élevée"`)


Packages nécessaires : 
```{r setup, message=FALSE}
library("FactoMineR") 
library("Factoshiny")
library("RColorBrewer")
```

## Question

Importer le fichier `assurance.txt` sous **R**. Vous pouvez l'appeler `conducteurs`.

::: {.callout-caution icon=false collapse=false, .content-visible when-profile="exercise"}
#### Conseils
Utiliser la fonction `read.table()`. Si la première ligne du fichier .txt contient le nom des variables, ajouter l'option `header = T` pour le préciser. Vous pouvez vérifier que l'importation a été correctement réalisée en utilisant `View(conducteurs)`.
:::

::: {.callout-tip icon=false collapse=false, .content-hidden when-profile="solution"}

### Solution
`r if (!params$solution) ":::  {.content-hidden}"` 
```{r include=params$solution}
conducteurs <- read.table("assurance.txt", header = T)
```
`r if (!params$solution) ":::"` 
:::

## Question 
Transformer la variable qualitative `valeur` en `factor` et mettre des labels.

::: {.callout-caution icon=false collapse=false, .content-visible when-profile="exercise"}
#### Conseils
Lorsque vous utilisez `table(conducteurs$valeur)`, vous constatez que cette variable est codée avec des entiers allant de 1 à 4. En réalité, 1 correspond à la modalité `faible valeur`, 2 à `valeur moyenne`, 3 à `valeur élevée` et 4 à `valeur très élevée`. La fonction `factor()` permet d'assigner des étiquettes à ces entiers pour la variable valeur. Pour ce faire, utilisez l'option `labels =` suivie d’un vecteur contenant les étiquettes ordonnées selon les entiers.
:::

::: {.callout-tip icon=false collapse=false, .content-hidden when-profile="solution"}

### Solution
`r if (!params$solution) ":::  {.content-hidden}"` 
```{r include=params$solution}
conducteurs$valeur = factor(conducteurs$valeur, 
  labels=c("faible valeur","valeur moyenne","valeur élevée","valeur très élevée"))
```
`r if (!params$solution) ":::"` 
:::


## Question 
Construire la table de contigence des deux variables qualitatives.

::: {.callout-caution icon=false collapse=false, .content-visible when-profile="exercise"}
#### Conseils
Vous pouvez utiliser la fonction `table()` sur deux variables qualitatives afin d'obtenir la table de contingence des effectifs.  
:::

::: {.callout-tip icon=false collapse=false, .content-hidden when-profile="solution"}

### Solution
`r if (!params$solution) ":::  {.content-hidden}"` 
```{r include=params$solution}
tabcontin <- table(conducteurs$formule, conducteurs$valeur)
tabcontin
```
`r if (!params$solution) ":::"` 
:::

## Question 
Afficher les profils lignes et les profils colonnes.

::: {.callout-caution icon=false collapse=false, .content-visible when-profile="exercise"}
#### Conseils
Pour obtenir les profils lignes (resp. colonnes), divisez les effectifs (la table créée précédemment) par la somme des lignes (resp. colonnes). Pour cela, utilisez la fonction `prop.table()` avec l'argument `margin = 1` (resp. `margin = 2`).
:::

::: {.callout-tip icon=false collapse=false, .content-hidden when-profile="solution"}

### Solution
`r if (!params$solution) ":::  {.content-hidden}"` 
```{r include=params$solution}
tabPL <- prop.table(tabcontin, margin = 1) # profils-lignes
round(tabPL, digits = 2)  
tabPC <- prop.table(tabcontin, margin = 2) # profils-colonnes
round(tabPC, digits = 2) 
```
`r if (!params$solution) ":::"` 
:::


## Question 
Statistique bivariée : apprécier le lien entre les variables à l'aide d'un outil graphique vu en cours. 

::: {.callout-caution icon=false collapse=false, .content-visible when-profile="exercise"}
#### Conseils
Pour représenter graphiquement les profils lignes ou colonnes, utilisez la fonction `barplot()`, appliquée sur les profils créés précédemment. Il existe plusieurs options pour personnaliser le graphique. Par exemple l'option `beside = T` permet de représenter les barres de manière juxtaposée.  
:::

::: {.callout-tip icon=false collapse=false, .content-hidden when-profile="solution"}

### Solution
`r if (!params$solution) ":::  {.content-hidden}"` 
```{r include=params$solution}
library(RColorBrewer)
# profils lignes
barplot(t(tabPL), beside= T, horiz = T, las = 1, cex.names = 0.5,
         main = "Répartition des conducteurs selon de la valeur du véhicule 
        \n pour chaque formule d'assurance", cex.main=0.8, legend.text = T,
         col= RColorBrewer::brewer.pal(4, name= "Set3"),
         args.legend = list(x = "top", ncol = 4, bty = "n", cex = 0.6))
# profils colonnes
 barplot(tabPC, beside= T, horiz = F, las = 2, cex.names = 0.5,
         main = "Répartition des conducteurs selon la formule d'assurance 
         \n par catégorie de valeur marchande",
         legend.text = T, col= brewer.pal(3, name= "Set3"),
         args.legend = list(x = "topright", ncol = 1, bty = "n", cex = 0.6))
```
`r if (!params$solution) ":::"` 
:::


## Question 
Les deux variables sont-elles liées ? Utiliser le test statistique vu en cours permettant de répondre à cette question. Interpréter les sorties de `R`. 

::: {.callout-caution icon=false collapse=false, .content-visible when-profile="exercise"}
#### Conseils
Vous pouvez utiliser la fonction `chisq.test()`
:::

::: {.callout-tip icon=false collapse=false, .content-hidden when-profile="solution"}

### Solution
`r if (!params$solution) ":::  {.content-hidden}"` 
```{r include=params$solution}
resutest <- chisq.test(tabcontin) 
resutest
# La statistique de test du Chi2 = 136.37
# (L-1)(C-1) = 6 degrés de liberté
#la p-valeur < 5%, nous rejetons l'hypothèse nulle. 
#les deux variables ne sont donc pas indépendantes. 
```
`r if (!params$solution) ":::"` 
:::


## Question 
Réaliser l'étude des écarts et des contributions au $\chi^2$.

::: {.callout-caution icon=false collapse=false, .content-visible when-profile="exercise"}
#### Conseils
Vous pouvez extraire les écarts de l'objet retourné par la fonction `chisq.test()` en utilisant la syntaxe `$residuals`.
:::

::: {.callout-tip icon=false collapse=false, .content-hidden when-profile="solution"}

### Solution
`r if (!params$solution) ":::  {.content-hidden}"` 
```{r include=params$solution}
ecarts <- resutest$residuals
ecarts
contrib <- ecarts^2
contrib

# Calcul du seuil de contribution
Seuil_contrib <- resutest$statistic / (nrow(tabcontin) * ncol(tabcontin)) 
# Le seuil de contribution est de 11.36425 dans ce cas

#On repère les 4 plus fortes contributions : (A, faible valeur),
#(C, faible valeur), (B, valeur très élevée), (C, valeur très élevée).

#analyse des écarts : 
#pour  (A, faible valeur) : obs > att : sur-représentation des véhicules 
#à faible valeur marchande associés à la formule d'assurance C.
#(C, faible valeur) : obs < att : sous-représentation
#(B, valeur très élevée) : obs < att : sous-représentation
#(C, valeur très élevée) : obs > att : sur-représentation
```
`r if (!params$solution) ":::"` 
:::

## Question 
Réaliser l'AFC sur les deux variables. Combien d'axes sont à retenir ? Justifier votre réponse.

::: {.callout-caution icon=false collapse=false, .content-visible when-profile="exercise"}
#### Conseils
Pour réaliser une **AFC** sous `R`, chargez le package `FactoMineR` avec la commande `library(FactoMineR)` et utilisez la fonction `CA()`. Pour le moment, nous ne nous intéressons pas à afficher les résultats de l'AFC. Toutefois, vous pouvez utiliser l'argument `graph =` pour activer l'affichage graphique si nécessaire.

:::

::: {.callout-tip icon=false collapse=false, .content-hidden when-profile="solution"}

### Solution
`r if (!params$solution) ":::  {.content-hidden}"` 
```{r include=params$solution}
resuafc=CA(tabcontin, graph = F)
# Etape 0 : liaison significative entre les 2 variables 
           #(rejet de H0 dans le test du khi2)

# Etape 1 : Choix de la dimension
resuafc$eig 
# on conserve seulement le 1er axe qui explique 93% de l'inertie totale
#selon le critère de la part d'inertie expliquée.
```
`r if (!params$solution) ":::"` 
:::


## Question 
Quels sont les profils ayant fortement contribué à l'apparition du (des) axe(s) retenu(s) ? Justifier votre réponse.

::: {.callout-caution icon=false collapse=false, .content-visible when-profile="exercise"}
#### Conseils
On accède aux résultats de l'AFC en utilisant les syntaxes `$row$coord` et `$col$coord` pour les coordonnées, ainsi que `$row$contrib` et `$col$contrib` pour les contributions.
:::

::: {.callout-tip icon=false collapse=false, .content-hidden when-profile="solution"}

### Solution
`r if (!params$solution) ":::  {.content-hidden}"` 
```{r include=params$solution}
resuafc$row #tous les résultats sur les PL
resuafc$col #tous les résultats sur les PC

resuafc$row$coord[,1] #les nouvelles coodonnées des PL
resuafc$col$coord[,1] #les nouvelles coodonnées des PL

# Etape 2 : les contributions des PL et des PC à l'inertie de l'axe
resuafc$row$contrib[,1] 
#seuil =100/3=33 : la formule d'assurance C (maximum) a fortement contribué 
#à l'inertie du premier axe

resuafc$col$contrib[,1] 
#seuil=100/4 =25: les modalités faible et très élevée de la valeur marchande
#ont fortement contribué à l'inertie du premier axe
```
`r if (!params$solution) ":::"` 
:::



## Question 
Quels sont les profils bien représentés ? Justifier votre réponse.

::: {.callout-caution icon=false collapse=false, .content-visible when-profile="exercise"}
#### Conseils
On accède aux cosinus 2 en faisant `$row$cos2` et `$col$cos2`pour étudier la qualité de la représentation. 
:::

::: {.callout-tip icon=false collapse=false, .content-hidden when-profile="solution"}

### Solution
`r if (!params$solution) ":::  {.content-hidden}"` 
```{r include=params$solution}
# Etape 3 : Qualité de représentation des profils :
#On calcule le cos2 de chaque profil.
#Ici, sur l'axe 1 : cos2 > 0.5 est pris comme seuil.

resuafc$row$cos2[,1] # les 3 PL A, B, C
resuafc$col$cos2[,1] # les 4 PC

# Sur l'axe 1 : tous les profils sont bien représentés.

# Les profils à la fois bien représentés et ayant une forte contribution
# sur l'axe 1 sont : la formule C, faible valeur et valeur très élevée.

```
`r if (!params$solution) ":::"` 
:::


## Question 
Réaliser le graphique simultané et commenter l'AFC.

::: {.callout-caution icon=false collapse=false, .content-visible when-profile="exercise"}
#### Conseils
Pour réaliser le graphique, vous pouvez modifier l'argument `graph =` de la fonction `CA()`.
:::

::: {.callout-tip icon=false collapse=false, .content-hidden when-profile="solution"}

### Solution
`r if (!params$solution) ":::  {.content-hidden}"` 
```{r include=params$solution, fig.width = 5, fig.height = 5}
CA(tabcontin, graph = T)

# Étape 4 : Interprétation du graphique simultané des modalités (ou profils)
#On commente C, Faible et Très élevée : les jeunes conducteurs ayant 
#un véhicule de valeur marchande très élevée sont associés à la formule
#d'assurance C (maximum) et s'opposent aux jeunes conducteurs ayant 
#un véhicule de faible valeur.   
#Remarque : On retrouve le commentaire des contributions.

```
`r if (!params$solution) ":::"` 
:::




## Question
Refaire l'analyse en utilisant la fonction `CAshiny()` du package **Factoshiny**:

::: {.callout-tip icon=false collapse=false, .content-visible when-profile="solution"}
#### Solution
`r if (!params$solution) ":::  {.content-hidden}"` 
```{r, eval=FALSE, include=params$solution}
library(Factoshiny)
help(CAshiny)
CAshiny(resuafc)
```
`r if (!params$solution) ":::"` 
:::

